package lab6;
import java.util.*;

//Main ATM class
public class ATM {
	 private Map<String, User> users;
	 
	 // Constructor to initialize the ATM with an empty user map
	 public ATM() {
	     this.users = new HashMap<>();
 }
// Method to register a new user
 public void registerUser(String username, String password,String pin) {
     if (!users.containsKey(username)) {
         users.put(username, new User(username, password, pin));
         System.out.println("User registered successfully.");
     } else {
         System.out.println("Username already exists. Please choose another one.");
     }
 }
//Method to login with username/password or pin
 public void login(String username, String password) { 
	 if (users.containsKey(username) ) {
         User user = users.get(username);
         if (user != null && (user.password.equals(password) || user.pin.equals(password))) {
             System.out.println("Login successful.");
             userChoice(user);
             // Proceed with account operations
         } else {
             System.out.println("Invalid password.");
         }
     } else {
         System.out.println("User not found. Please register.");
     }
 }
 // Method to generate a random 6-digit string
 public static String generateSixDigitString() {
     Random random = new Random();
     StringBuilder sb = new StringBuilder();
     for (int i = 0; i < 6; i++) {
         sb.append(random.nextInt(10)); // Append a random digit (0-9)
     }
     return sb.toString();
 }
//Method to handle user login credentials
 public static void loginCredentials(ATM atm) {
	 String userName;
	 String password;
	 Scanner userInput = new Scanner(System.in);
	 System.out.println("Enter userName or 6 digit code");
	 userName = userInput.nextLine();
	 System.out.println("Enter password");
	 password = userInput.nextLine();
	 atm.login(userName,password);
	 
 }
//Method to present user choices after login
 public static void userChoice(User user) {
	 String input;
	 Scanner userInput = new Scanner(System.in);
	 
	 System.out.println("Checkings(c) \n Savings(s) \n Logout(l)");
	 input = userInput.nextLine();
	 
	
	 while (!input.equals("l")){
		 if(input.equals("c")) {
			 checkingsFunctionality(user);// go to checkings functionality
		 }
		 else if (input.equals("s")) {
			 savingsFunctionality(user);// go to saving functionality
		 }
		 
		 System.out.println("\n Checkings(c) \n Savings(s) \n Logout(l)");
		 input = userInput.nextLine();
	 }
 }
// Method to handle savings account operations
public static void savingsFunctionality(User userBankAccount) {
	String input;
	Scanner userInput = new Scanner(System.in);
	
	System.out.println("\n Savings account");
	System.out.println("Deposit(d)");
	System.out.println("Transfer(t)");
	System.out.println("Get balance(b)");
	
	input = userInput.nextLine();//get user input 
	
	switch(input) {
	case "d":
		String depositAmount;
		System.out.println("deposit \n");
		System.out.println("Deposit amount:");
		depositAmount = userInput.nextLine();
		userBankAccount.depositToSaving(Integer.parseInt(depositAmount));// deposits money to savings account
		System.out.println(userBankAccount.getSavingsAccount());
		break;
	case "t":
		String transferAmount;
		System.out.println("transfer \n");
		System.out.println("Transfer to savings amount: ");
		transferAmount = userInput.nextLine();
		userBankAccount.transferSavingsToCheckings(Integer.parseInt(transferAmount)); // transfer from savings to checkings
		break;
	case "b":
		System.out.println("get balance \n");
		System.out.println(userBankAccount.getSavingsAccount());
		break;
	default:
		System.out.println("Try again");
	}	
}
//Method to handle checkings account operations
public static void checkingsFunctionality(User userBankAccount) {
	String input;
	Scanner userInput = new Scanner(System.in);
	
	System.out.println("\n Checkings account");
	System.out.println("Deposit(d)");
	System.out.println("Withdraw(w)");
	System.out.println("Transfer(t)");
	System.out.println("Get balance(b)");
	
	input = userInput.nextLine();//get user input 
	switch(input) {
	case "d":
		String depositAmount;
		System.out.println("deposit \n");
		System.out.println("Deposit amount:");
		depositAmount = userInput.nextLine();
		userBankAccount.depositToChecking(Integer.parseInt(depositAmount));// deposits money to checkings account
		System.out.println(userBankAccount.getCheckingAccount());
		break;
	case "w":
		String withDrawAmount;
		System.out.println("withdraw \n");
		System.out.println("Withdraw amount: ");
		withDrawAmount = userInput.nextLine();
		userBankAccount.withdrawFromCheckings(Integer.parseInt(withDrawAmount));
		System.out.println(userBankAccount.getCheckingAccount());
		break;
	case "t":
		String transferAmount;
		System.out.println("transfer \n");
		System.out.println("Transfer to savings amount: ");
		transferAmount = userInput.nextLine();
		userBankAccount.transferCheckingsToSavings(Integer.parseInt(transferAmount));
		break;
	case "b":
		System.out.println("get balance \n");
		System.out.println(userBankAccount.getCheckingAccount());
		break;
	default:
		System.out.println("Try again");
	}
}
//Main method to run the ATM
 public static void main(String[] args) {
     ATM atm = new ATM();
     String userName;
     String password;
     String pin = generateSixDigitString();
     Scanner userInput = new Scanner(System.in);  // Create a Scanner object
     String sOrl;
     System.out.println("Create a new account Enter user name: ");
     userName = userInput.nextLine();
 
     System.out.println("Enter a password");
     password = userInput.nextLine();
     
     System.out.println("Your unique pin #: " + pin);
     
     atm.registerUser(userName,password,pin); // register new user to the system
     
     
     // while loop that runs forever here
     while(true){
	     System.out.println("Sign-up(s) or login(l)");
	     sOrl = userInput.nextLine();
	     
	     if(sOrl.equals("l")) {
	    	 loginCredentials(atm);
	     }
	     else if(sOrl.equals("s")) {
	    	 //Sign up functionality here 
	    	 System.out.println("Create a new account Enter user name: ");
	         userName = userInput.nextLine();
	     
	         System.out.println("Enter a password");
	         password = userInput.nextLine();
	         
	         System.out.println("Your unique pin #: " + pin);
	         
	         atm.registerUser(userName,password,pin); // register new user to the system
	     }
     }
     
 }
}